---
import AuthLayout from "@layouts/AuthLayout.astro";

const email = Astro.cookies.get("email")?.value ?? "";
const remember_me = !!email;
---

<AuthLayout>
  <div class="flex justify-center self-center z-10">
    <div class="p-12 bg-white mx-auto rounded-2xl w-100">
      <div class="mb-4">
        <h3 class="font-semibold text-2xl text-gray-800">Login</h3>
        <p class="text-gray-500">Please Log in to your account.</p>
      </div>
      <form class="space-y-5">
        <div class="space-y-2">
          <label class="text-sm font-medium text-gray-700 tracking-wide"
            >Email</label
          >
          <input
            class="w-full text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
            type="email"
            value={email}
            name="email"
            placeholder="mail@gmail.com"
          />
        </div>
        <div class="space-y-2">
          <label class="mb-5 text-sm font-medium text-gray-700 tracking-wide">
            Password
          </label>
          <input
            class="w-full content-center text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
            type="password"
            name="password"
            placeholder="Enter your password"
          />
        </div>
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input
              id="remember_me"
              name="remember_me"
              type="checkbox"
              checked={remember_me}
              class="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded"
            />
            <label for="remember_me" class="ml-2 block text-sm text-gray-800">
              Remember me
            </label>
          </div>
          <div class="text-sm">
            <a
              href="/register"
              class="text-green-400 hover:text-green-500 ml-2"
            >
              Don't have an account? Sign up
            </a>
          </div>
        </div>
        <div>
          <button
            id="btnSubmit"
            type="submit"
            class="disableBtn disabled:bg-gray-300 w-full flex justify-center bg-green-400 hover:bg-green-500 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg cursor-pointer transition ease-in duration-500 focus:bg-gray-300"
          >
            Log in
          </button>
          <div class="flex flex-1 w-full my-3">
            <div class="w-full border-t-2 border-gray-500"></div>
          </div>
          <button
            id="btn-google"
            type="button"
            class="disabled:bg-gray-300 w-full flex justify-center bg-red-500 hover:bg-red-700 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg transition ease-in duration-500 cursor-crosshair"
          >
            Log in with Google
          </button>
        </div>
      </form>
      <div class="pt-5 text-center text-gray-400 text-xs">
        <span>
          Copyright Â© 2021-{new Date().getFullYear()}
          <a
            href="https://codepen.io/uidesignhub"
            rel=""
            target="_blank"
            title="Ajimon"
            class="text-green hover:text-green-500">AJI</a
          ></span
        >
      </div>
    </div>
  </div>
</AuthLayout>

<style>
  @reference 'tailwindcss';
  .disableBtn:disabled {
    @apply bg-gray-400 cursor-default;
  }
</style>

<script>
  import { actions } from "astro:actions";
  import { GoogleAuthProvider, signInWithPopup } from "firebase/auth";
  import { firebase } from "src/firebase/config";
  import Swal from "sweetalert2";

  const form = document.querySelector("form") as HTMLFormElement;
  const submitBtn = document.querySelector("#btnSubmit") as HTMLButtonElement;
  const googleBtn = document.querySelector("#btn-google") as HTMLButtonElement;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    submitBtn.setAttribute("disabled", "disabled");

    const formData = new FormData(form);
    const { error } = await actions.loginUser(formData as any);

    if (error) {
      console.log(error);
      Swal.fire({
        icon: "error",
        title: "Wrong email or password",
        text: error.message,
      });
      submitBtn.removeAttribute("disabled");
      return;
    }
    window.location.replace("/protected");
  });

  googleBtn.addEventListener("click", async () => {
    googleBtn.setAttribute("disabled", "disabled");
    const provider = new GoogleAuthProvider();

    try {
      //First step: Get credentials from user side
      const credentials = await signInWithPopup(firebase.auth, provider);

      //Second step: Verify the credentials in the backend.
      const { error } = await actions.loginWithGoogle(credentials);
      if (error) {
        alert(error.message);
        googleBtn.removeAttribute("disabled");
        return;
      }

      googleBtn.innerText = "Redirecting...";
      window.location.replace("/protected");
    } catch (error) {
      console.log(error);
      googleBtn.removeAttribute("disabled");
    }
  });
</script>
